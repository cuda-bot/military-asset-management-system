{"code":"ECONNREFUSED","level":"error","message":"Migration failed:","service":"military-asset-management","stack":"AggregateError [ECONNREFUSED]: \n    at /Users/architrajput/Documents/Desktop - architâ€™s MacBook Pro/work/devlopment/military-asset-mgmt/backend/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Object.getClient (/Users/architrajput/Documents/Desktop - architâ€™s MacBook Pro/work/devlopment/military-asset-mgmt/backend/config/database.js:52:16)\n    at async createTables (/Users/architrajput/Documents/Desktop - architâ€™s MacBook Pro/work/devlopment/military-asset-mgmt/backend/scripts/migrate.js:5:20)","timestamp":"2025-06-21 11:51:07"}
2025-06-21 14:42:13 [31merror[39m: 
Invalid `prisma.base.createMany()` invocation:

{
  data: [
    {
      name: "Fort Bragg",
      location: "North Carolina, USA",
      commanderName: "Col. John Smith",
      contactEmail: "commander@fortbragg.mil",
      contactPhone: "+1-910-396-1111"
    },
    {
      name: "Camp Pendleton",
      location: "California, USA",
      commanderName: "Col. Sarah Johnson",
      contactEmail: "commander@camppendleton.mil",
      contactPhone: "+1-760-725-4111"
    },
    {
      name: "Fort Hood",
      location: "Texas, USA",
      commanderName: "Col. Michael Davis",
      contactEmail: "commander@forthood.mil",
      contactPhone: "+1-254-287-1111"
    },
    {
      name: "Joint Base Lewis-McChord",
      location: "Washington, USA",
      commanderName: "Col. Robert Wilson",
      contactEmail: "commander@jblm.mil",
      contactPhone: "+1-253-967-1111"
    }
  ],
  skipDuplicates: true
}

Unknown argument `commanderName`. Available options are marked with ?.
2025-06-21 14:42:48 [31merror[39m: 
Invalid `prisma.user.upsert()` invocation:

{
  where: {
    username: "admin"
  },
  update: {},
  create: {
    username: "admin",
    email: "admin@military.mil",
    passwordHash: "$2a$12$QuzgXFTv2RfQXb7YTx.qre7AjwtQ0WjsVlEfDyHmev0WCbNZ55R.C",
    firstName: "System",
    lastName: "Administrator",
    role: "admin",
+   password: String
  }
}

Argument `password` is missing.
2025-06-21 14:43:23 [31merror[39m: 
Invalid `prisma.user.upsert()` invocation:

{
  where: {
    username: "admin"
  },
  update: {},
  create: {
    username: "admin",
    email: "admin@military.mil",
    ~~~~~
    password: "$2a$12$Hyu3Opt.bRqHUHEEOabwc.VfBtnIz4WhxKVzI9o6pbLjwuUBHNprK",
    firstName: "System",
    lastName: "Administrator",
    role: "admin",
?   id?: String,
?   created_at?: DateTime,
?   updated_at?: DateTime,
?   base?: BaseCreateNestedOneWithoutUsersInput,
?   assignments?: AssignmentCreateNestedManyWithoutUserInput
  }
}

Unknown argument `email`. Available options are marked with ?.
2025-06-21 16:21:22 [31merror[39m: Login error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    username: "commander_bragg"
  },
  include: {
    bases: {
    ~~~~~
      include: {
        base: true
      }
    },
?   base?: true,
?   assignments?: true
  }
}

Unknown field `bases` for include statement on model `User`. Available options are marked with ?.
2025-06-21 16:26:42 [31merror[39m: Token verification error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: "cmc60v4qe000evvfcojm8whzq"
  },
  select: {
    id: true,
    username: true,
    email: true,
    ~~~~~
    firstName: true,
    lastName: true,
    role: true,
    isActive: true,
    bases: {
      select: {
        base: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
?   password?: true,
?   base_id?: true,
?   created_at?: true,
?   updated_at?: true,
?   base?: true,
?   assignments?: true,
?   _count?: true
  }
}

Unknown field `email` for select statement on model `User`. Available options are marked with ?.
2025-06-21 16:26:42 [31merror[39m: Token verification error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: "cmc60v4qe000evvfcojm8whzq"
  },
  select: {
    id: true,
    username: true,
    email: true,
    ~~~~~
    firstName: true,
    lastName: true,
    role: true,
    isActive: true,
    bases: {
      select: {
        base: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
?   password?: true,
?   base_id?: true,
?   created_at?: true,
?   updated_at?: true,
?   base?: true,
?   assignments?: true,
?   _count?: true
  }
}

Unknown field `email` for select statement on model `User`. Available options are marked with ?.
2025-06-21 16:28:19 [31merror[39m: Token verification error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: "cmc60v68q000fvvfcnwu4eft9"
  },
  select: {
    id: true,
    username: true,
    email: true,
    ~~~~~
    firstName: true,
    lastName: true,
    role: true,
    isActive: true,
    bases: {
      select: {
        base: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
?   password?: true,
?   base_id?: true,
?   created_at?: true,
?   updated_at?: true,
?   base?: true,
?   assignments?: true,
?   _count?: true
  }
}

Unknown field `email` for select statement on model `User`. Available options are marked with ?.
2025-06-21 16:28:19 [31merror[39m: Token verification error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: "cmc60v68q000fvvfcnwu4eft9"
  },
  select: {
    id: true,
    username: true,
    email: true,
    ~~~~~
    firstName: true,
    lastName: true,
    role: true,
    isActive: true,
    bases: {
      select: {
        base: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
?   password?: true,
?   base_id?: true,
?   created_at?: true,
?   updated_at?: true,
?   base?: true,
?   assignments?: true,
?   _count?: true
  }
}

Unknown field `email` for select statement on model `User`. Available options are marked with ?.
2025-06-21 16:29:33 [31merror[39m: Token verification error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: "cmc60v87l000hvvfcws5b0e6k"
  },
  select: {
    id: true,
    username: true,
    email: true,
    ~~~~~
    firstName: true,
    lastName: true,
    role: true,
    isActive: true,
    bases: {
      select: {
        base: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
?   password?: true,
?   base_id?: true,
?   created_at?: true,
?   updated_at?: true,
?   base?: true,
?   assignments?: true,
?   _count?: true
  }
}

Unknown field `email` for select statement on model `User`. Available options are marked with ?.
2025-06-21 16:29:33 [31merror[39m: Token verification error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: "cmc60v87l000hvvfcws5b0e6k"
  },
  select: {
    id: true,
    username: true,
    email: true,
    ~~~~~
    firstName: true,
    lastName: true,
    role: true,
    isActive: true,
    bases: {
      select: {
        base: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
?   password?: true,
?   base_id?: true,
?   created_at?: true,
?   updated_at?: true,
?   base?: true,
?   assignments?: true,
?   _count?: true
  }
}

Unknown field `email` for select statement on model `User`. Available options are marked with ?.
2025-06-21 16:31:04 [31merror[39m: Token verification error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: "cmc60v87l000hvvfcws5b0e6k"
  },
  select: {
    id: true,
    username: true,
    email: true,
    ~~~~~
    firstName: true,
    lastName: true,
    role: true,
    isActive: true,
    bases: {
      select: {
        base: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
?   password?: true,
?   base_id?: true,
?   created_at?: true,
?   updated_at?: true,
?   base?: true,
?   assignments?: true,
?   _count?: true
  }
}

Unknown field `email` for select statement on model `User`. Available options are marked with ?.
2025-06-21 16:31:04 [31merror[39m: Token verification error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: "cmc60v87l000hvvfcws5b0e6k"
  },
  select: {
    id: true,
    username: true,
    email: true,
    ~~~~~
    firstName: true,
    lastName: true,
    role: true,
    isActive: true,
    bases: {
      select: {
        base: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
?   password?: true,
?   base_id?: true,
?   created_at?: true,
?   updated_at?: true,
?   base?: true,
?   assignments?: true,
?   _count?: true
  }
}

Unknown field `email` for select statement on model `User`. Available options are marked with ?.
2025-06-21 16:32:53 [31merror[39m: Token verification error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: "cmc60v87l000hvvfcws5b0e6k"
  },
  select: {
    id: true,
    username: true,
    email: true,
    ~~~~~
    firstName: true,
    lastName: true,
    role: true,
    isActive: true,
    bases: {
      select: {
        base: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
?   password?: true,
?   base_id?: true,
?   created_at?: true,
?   updated_at?: true,
?   base?: true,
?   assignments?: true,
?   _count?: true
  }
}

Unknown field `email` for select statement on model `User`. Available options are marked with ?.
2025-06-21 16:32:53 [31merror[39m: Token verification error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: "cmc60v87l000hvvfcws5b0e6k"
  },
  select: {
    id: true,
    username: true,
    email: true,
    ~~~~~
    firstName: true,
    lastName: true,
    role: true,
    isActive: true,
    bases: {
      select: {
        base: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
?   password?: true,
?   base_id?: true,
?   created_at?: true,
?   updated_at?: true,
?   base?: true,
?   assignments?: true,
?   _count?: true
  }
}

Unknown field `email` for select statement on model `User`. Available options are marked with ?.
2025-06-21 16:45:18 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.purchase.aggregate()` invocation:

{
  select: {
    _sum: {
      select: {
        quantity: true
      }
    }
  },
  where: {
    purchaseDate: {},
    ~~~~~~~~~~~~
?   AND?: PurchaseWhereInput | PurchaseWhereInput[],
?   OR?: PurchaseWhereInput[],
?   NOT?: PurchaseWhereInput | PurchaseWhereInput[],
?   id?: StringFilter | String,
?   asset_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   vendor?: StringFilter | String,
?   cost?: FloatFilter | Float,
?   purchase_date?: DateTimeFilter | DateTime,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   asset?: AssetScalarRelationFilter | AssetWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput
  }
}

Unknown argument `purchaseDate`. Did you mean `purchase_date`? Available options are marked with ?.
2025-06-21 16:45:19 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.purchase.aggregate()` invocation:

{
  select: {
    _sum: {
      select: {
        quantity: true
      }
    }
  },
  where: {
    purchaseDate: {},
    ~~~~~~~~~~~~
?   AND?: PurchaseWhereInput | PurchaseWhereInput[],
?   OR?: PurchaseWhereInput[],
?   NOT?: PurchaseWhereInput | PurchaseWhereInput[],
?   id?: StringFilter | String,
?   asset_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   vendor?: StringFilter | String,
?   cost?: FloatFilter | Float,
?   purchase_date?: DateTimeFilter | DateTime,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   asset?: AssetScalarRelationFilter | AssetWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput
  }
}

Unknown argument `purchaseDate`. Did you mean `purchase_date`? Available options are marked with ?.
2025-06-21 16:45:22 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.purchase.aggregate()` invocation:

{
  select: {
    _sum: {
      select: {
        quantity: true
      }
    }
  },
  where: {
    purchaseDate: {},
    ~~~~~~~~~~~~
?   AND?: PurchaseWhereInput | PurchaseWhereInput[],
?   OR?: PurchaseWhereInput[],
?   NOT?: PurchaseWhereInput | PurchaseWhereInput[],
?   id?: StringFilter | String,
?   asset_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   vendor?: StringFilter | String,
?   cost?: FloatFilter | Float,
?   purchase_date?: DateTimeFilter | DateTime,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   asset?: AssetScalarRelationFilter | AssetWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput
  }
}

Unknown argument `purchaseDate`. Did you mean `purchase_date`? Available options are marked with ?.
2025-06-21 16:45:26 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.purchase.aggregate()` invocation:

{
  select: {
    _sum: {
      select: {
        quantity: true
      }
    }
  },
  where: {
    purchaseDate: {},
    ~~~~~~~~~~~~
?   AND?: PurchaseWhereInput | PurchaseWhereInput[],
?   OR?: PurchaseWhereInput[],
?   NOT?: PurchaseWhereInput | PurchaseWhereInput[],
?   id?: StringFilter | String,
?   asset_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   vendor?: StringFilter | String,
?   cost?: FloatFilter | Float,
?   purchase_date?: DateTimeFilter | DateTime,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   asset?: AssetScalarRelationFilter | AssetWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput
  }
}

Unknown argument `purchaseDate`. Did you mean `purchase_date`? Available options are marked with ?.
2025-06-21 16:45:52 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    baseId: {
    ~~~~~~
      in: undefined
    },
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  }
}

Unknown argument `baseId`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 16:45:53 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    baseId: {
    ~~~~~~
      in: undefined
    },
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  }
}

Unknown argument `baseId`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 16:45:55 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    baseId: {
    ~~~~~~
      in: undefined
    },
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  }
}

Unknown argument `baseId`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 16:45:59 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    baseId: {
    ~~~~~~
      in: undefined
    },
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  }
}

Unknown argument `baseId`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 16:46:35 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    baseId: {
    ~~~~~~
      in: undefined
    },
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  }
}

Unknown argument `baseId`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 16:46:36 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    baseId: {
    ~~~~~~
      in: undefined
    },
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  }
}

Unknown argument `baseId`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 16:46:38 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    baseId: {
    ~~~~~~
      in: undefined
    },
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  }
}

Unknown argument `baseId`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 16:46:42 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    baseId: {
    ~~~~~~
      in: undefined
    },
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  }
}

Unknown argument `baseId`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 16:50:21 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchaseDate: "desc",
    ~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   base_id?: SortOrder,
?   vendor?: SortOrder,
?   cost?: SortOrder,
?   purchase_date?: SortOrder,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   base?: BaseOrderByWithRelationInput
  },
  include: {
    equipmentType: true,
    base: true,
    createdBy: {
      select: {
        id: true,
        username: true
      }
    }
  }
}

Unknown argument `purchaseDate`. Did you mean `purchase_date`? Available options are marked with ?.
2025-06-21 16:50:22 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchaseDate: "desc",
    ~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   base_id?: SortOrder,
?   vendor?: SortOrder,
?   cost?: SortOrder,
?   purchase_date?: SortOrder,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   base?: BaseOrderByWithRelationInput
  },
  include: {
    equipmentType: true,
    base: true,
    createdBy: {
      select: {
        id: true,
        username: true
      }
    }
  }
}

Unknown argument `purchaseDate`. Did you mean `purchase_date`? Available options are marked with ?.
2025-06-21 16:54:41 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-21 16:54:42 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-21 16:54:44 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-21 22:45:15 [31merror[39m: Error fetching transfers: 
Invalid `prisma.transfer.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    transferDate: "desc",
    ~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   from_base_id?: SortOrder,
?   to_base_id?: SortOrder,
?   transfer_date?: SortOrder,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   from_base?: BaseOrderByWithRelationInput,
?   to_base?: BaseOrderByWithRelationInput
  },
  include: {
    equipmentType: true,
    fromBase: true,
    toBase: true,
    createdBy: {
      select: {
        id: true,
        username: true
      }
    },
    approvedBy: {
      select: {
        id: true,
        username: true
      }
    }
  }
}

Unknown argument `transferDate`. Did you mean `transfer_date`? Available options are marked with ?.
2025-06-21 22:45:16 [31merror[39m: Error fetching transfers: 
Invalid `prisma.transfer.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    transferDate: "desc",
    ~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   from_base_id?: SortOrder,
?   to_base_id?: SortOrder,
?   transfer_date?: SortOrder,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   from_base?: BaseOrderByWithRelationInput,
?   to_base?: BaseOrderByWithRelationInput
  },
  include: {
    equipmentType: true,
    fromBase: true,
    toBase: true,
    createdBy: {
      select: {
        id: true,
        username: true
      }
    },
    approvedBy: {
      select: {
        id: true,
        username: true
      }
    }
  }
}

Unknown argument `transferDate`. Did you mean `transfer_date`? Available options are marked with ?.
2025-06-21 22:45:18 [31merror[39m: Error fetching transfers: 
Invalid `prisma.transfer.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    transferDate: "desc",
    ~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   from_base_id?: SortOrder,
?   to_base_id?: SortOrder,
?   transfer_date?: SortOrder,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   from_base?: BaseOrderByWithRelationInput,
?   to_base?: BaseOrderByWithRelationInput
  },
  include: {
    equipmentType: true,
    fromBase: true,
    toBase: true,
    createdBy: {
      select: {
        id: true,
        username: true
      }
    },
    approvedBy: {
      select: {
        id: true,
        username: true
      }
    }
  }
}

Unknown argument `transferDate`. Did you mean `transfer_date`? Available options are marked with ?.
2025-06-21 22:45:22 [31merror[39m: Error fetching transfers: 
Invalid `prisma.transfer.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    transferDate: "desc",
    ~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   from_base_id?: SortOrder,
?   to_base_id?: SortOrder,
?   transfer_date?: SortOrder,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   from_base?: BaseOrderByWithRelationInput,
?   to_base?: BaseOrderByWithRelationInput
  },
  include: {
    equipmentType: true,
    fromBase: true,
    toBase: true,
    createdBy: {
      select: {
        id: true,
        username: true
      }
    },
    approvedBy: {
      select: {
        id: true,
        username: true
      }
    }
  }
}

Unknown argument `transferDate`. Did you mean `transfer_date`? Available options are marked with ?.
2025-06-21 22:46:54 [31merror[39m: Error fetching transfers: 
Invalid `prisma.transfer.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    transferDate: "desc",
    ~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   from_base_id?: SortOrder,
?   to_base_id?: SortOrder,
?   transfer_date?: SortOrder,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   from_base?: BaseOrderByWithRelationInput,
?   to_base?: BaseOrderByWithRelationInput
  },
  include: {
    equipmentType: true,
    fromBase: true,
    toBase: true,
    createdBy: {
      select: {
        id: true,
        username: true
      }
    },
    approvedBy: {
      select: {
        id: true,
        username: true
      }
    }
  }
}

Unknown argument `transferDate`. Did you mean `transfer_date`? Available options are marked with ?.
2025-06-21 22:46:55 [31merror[39m: Error fetching transfers: 
Invalid `prisma.transfer.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    transferDate: "desc",
    ~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   from_base_id?: SortOrder,
?   to_base_id?: SortOrder,
?   transfer_date?: SortOrder,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   from_base?: BaseOrderByWithRelationInput,
?   to_base?: BaseOrderByWithRelationInput
  },
  include: {
    equipmentType: true,
    fromBase: true,
    toBase: true,
    createdBy: {
      select: {
        id: true,
        username: true
      }
    },
    approvedBy: {
      select: {
        id: true,
        username: true
      }
    }
  }
}

Unknown argument `transferDate`. Did you mean `transfer_date`? Available options are marked with ?.
2025-06-21 22:46:57 [31merror[39m: Error fetching transfers: 
Invalid `prisma.transfer.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    transferDate: "desc",
    ~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   from_base_id?: SortOrder,
?   to_base_id?: SortOrder,
?   transfer_date?: SortOrder,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   from_base?: BaseOrderByWithRelationInput,
?   to_base?: BaseOrderByWithRelationInput
  },
  include: {
    equipmentType: true,
    fromBase: true,
    toBase: true,
    createdBy: {
      select: {
        id: true,
        username: true
      }
    },
    approvedBy: {
      select: {
        id: true,
        username: true
      }
    }
  }
}

Unknown argument `transferDate`. Did you mean `transfer_date`? Available options are marked with ?.
2025-06-21 22:47:00 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-21 22:47:01 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-21 22:48:49 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.purchase.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    base_id: "cmc60tcqu0000vvd3dim2q2fy",
    type_id: "cmc60tdkc000avvd3f32o1wr3",
    ~~~~~~~
?   AND?: PurchaseWhereInput | PurchaseWhereInput[],
?   OR?: PurchaseWhereInput[],
?   NOT?: PurchaseWhereInput | PurchaseWhereInput[],
?   id?: StringFilter | String,
?   asset_id?: StringFilter | String,
?   vendor?: StringFilter | String,
?   cost?: FloatFilter | Float,
?   purchase_date?: DateTimeFilter | DateTime,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   asset?: AssetScalarRelationFilter | AssetWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput
  }
}

Unknown argument `type_id`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 22:48:49 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.purchase.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    base_id: "cmc60tcqu0000vvd3dim2q2fy",
    type_id: "cmc60tdkc0006vvd3sxh009fh",
    ~~~~~~~
?   AND?: PurchaseWhereInput | PurchaseWhereInput[],
?   OR?: PurchaseWhereInput[],
?   NOT?: PurchaseWhereInput | PurchaseWhereInput[],
?   id?: StringFilter | String,
?   asset_id?: StringFilter | String,
?   vendor?: StringFilter | String,
?   cost?: FloatFilter | Float,
?   purchase_date?: DateTimeFilter | DateTime,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   asset?: AssetScalarRelationFilter | AssetWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput
  }
}

Unknown argument `type_id`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 22:48:50 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.purchase.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    base_id: "cmc60tcqu0000vvd3dim2q2fy",
    type_id: "cmc60tdkc000avvd3f32o1wr3",
    ~~~~~~~
?   AND?: PurchaseWhereInput | PurchaseWhereInput[],
?   OR?: PurchaseWhereInput[],
?   NOT?: PurchaseWhereInput | PurchaseWhereInput[],
?   id?: StringFilter | String,
?   asset_id?: StringFilter | String,
?   vendor?: StringFilter | String,
?   cost?: FloatFilter | Float,
?   purchase_date?: DateTimeFilter | DateTime,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   asset?: AssetScalarRelationFilter | AssetWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput
  }
}

Unknown argument `type_id`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 22:48:52 [31merror[39m: Error fetching dashboard metrics: 
Invalid `prisma.purchase.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    base_id: "cmc60tcqu0000vvd3dim2q2fy",
    type_id: "cmc60tdkc000avvd3f32o1wr3",
    ~~~~~~~
?   AND?: PurchaseWhereInput | PurchaseWhereInput[],
?   OR?: PurchaseWhereInput[],
?   NOT?: PurchaseWhereInput | PurchaseWhereInput[],
?   id?: StringFilter | String,
?   asset_id?: StringFilter | String,
?   vendor?: StringFilter | String,
?   cost?: FloatFilter | Float,
?   purchase_date?: DateTimeFilter | DateTime,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   asset?: AssetScalarRelationFilter | AssetWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput
  }
}

Unknown argument `type_id`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 22:48:56 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    equipmentTypeId: NaN,
    ~~~~~~~~~~~~~~~
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  },
  skip: 0,
  take: 10,
  orderBy: {
    createdAt: "desc"
  },
  include: {
    equipmentType: true,
    base: true
  }
}

Unknown argument `equipmentTypeId`. Available options are marked with ?.
2025-06-21 22:48:57 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    equipmentTypeId: NaN,
    ~~~~~~~~~~~~~~~
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  },
  skip: 0,
  take: 10,
  orderBy: {
    createdAt: "desc"
  },
  include: {
    equipmentType: true,
    base: true
  }
}

Unknown argument `equipmentTypeId`. Available options are marked with ?.
2025-06-21 22:48:59 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    equipmentTypeId: NaN,
    ~~~~~~~~~~~~~~~
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  },
  skip: 0,
  take: 10,
  orderBy: {
    createdAt: "desc"
  },
  include: {
    equipmentType: true,
    base: true
  }
}

Unknown argument `equipmentTypeId`. Available options are marked with ?.
2025-06-21 22:49:04 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    equipmentTypeId: NaN,
    ~~~~~~~~~~~~~~~
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  },
  skip: 0,
  take: 10,
  orderBy: {
    createdAt: "desc"
  },
  include: {
    equipmentType: true,
    base: true
  }
}

Unknown argument `equipmentTypeId`. Available options are marked with ?.
2025-06-21 22:49:19 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-21 22:49:20 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-21 22:49:22 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-21 23:03:37 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-21 23:03:38 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-21 23:04:22 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   equipment_type?: true,
?   assignments?: true,
?   transfers?: true,
?   purchases?: true,
?   expenditures?: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-21 23:04:23 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   equipment_type?: true,
?   assignments?: true,
?   transfers?: true,
?   purchases?: true,
?   expenditures?: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-21 23:04:32 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-21 23:04:33 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   equipment_type?: true,
?   assignments?: true,
?   transfers?: true,
?   purchases?: true,
?   expenditures?: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-21 23:24:09 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      baseId: {
      ~~~~~~
        in: undefined
      },
?     is?: AssetWhereInput,
?     isNot?: AssetWhereInput
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `baseId`. Available options are marked with ?.
2025-06-21 23:24:10 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      baseId: {
      ~~~~~~
        in: undefined
      },
?     is?: AssetWhereInput,
?     isNot?: AssetWhereInput
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `baseId`. Available options are marked with ?.
2025-06-21 23:24:12 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    baseId: {
    ~~~~~~
      in: undefined
    },
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  },
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    base: true
  }
}

Unknown argument `baseId`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 23:24:13 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    baseId: {
    ~~~~~~
      in: undefined
    },
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  },
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    base: true
  }
}

Unknown argument `baseId`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 23:24:14 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      baseId: {
      ~~~~~~
        in: undefined
      },
?     is?: AssetWhereInput,
?     isNot?: AssetWhereInput
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `baseId`. Available options are marked with ?.
2025-06-21 23:24:29 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      baseId: {
      ~~~~~~
        in: undefined
      },
?     is?: AssetWhereInput,
?     isNot?: AssetWhereInput
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `baseId`. Available options are marked with ?.
2025-06-21 23:24:30 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      baseId: {
      ~~~~~~
        in: undefined
      },
?     is?: AssetWhereInput,
?     isNot?: AssetWhereInput
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `baseId`. Available options are marked with ?.
2025-06-21 23:26:17 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      baseId: {
      ~~~~~~
        in: undefined
      },
?     is?: AssetWhereInput,
?     isNot?: AssetWhereInput
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `baseId`. Available options are marked with ?.
2025-06-21 23:26:18 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      baseId: {
      ~~~~~~
        in: undefined
      },
?     is?: AssetWhereInput,
?     isNot?: AssetWhereInput
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `baseId`. Available options are marked with ?.
2025-06-21 23:26:19 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    baseId: {
    ~~~~~~
      in: undefined
    },
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  },
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    base: true
  }
}

Unknown argument `baseId`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 23:26:20 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    baseId: {
    ~~~~~~
      in: undefined
    },
?   AND?: AssetWhereInput | AssetWhereInput[],
?   OR?: AssetWhereInput[],
?   NOT?: AssetWhereInput | AssetWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   type_id?: StringFilter | String,
?   base_id?: StringFilter | String,
?   status?: EnumAssetStatusFilter | AssetStatus,
?   created_at?: DateTimeFilter | DateTime,
?   updated_at?: DateTimeFilter | DateTime,
?   equipment_type?: EquipmentTypeScalarRelationFilter | EquipmentTypeWhereInput,
?   base?: BaseScalarRelationFilter | BaseWhereInput,
?   assignments?: AssignmentListRelationFilter,
?   transfers?: TransferListRelationFilter,
?   purchases?: PurchaseListRelationFilter,
?   expenditures?: ExpenditureListRelationFilter
  },
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    base: true
  }
}

Unknown argument `baseId`. Did you mean `base_id`? Available options are marked with ?.
2025-06-21 23:26:21 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      baseId: {
      ~~~~~~
        in: undefined
      },
?     is?: AssetWhereInput,
?     isNot?: AssetWhereInput
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `baseId`. Available options are marked with ?.
2025-06-21 23:26:28 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      baseId: {
      ~~~~~~
        in: undefined
      },
?     is?: AssetWhereInput,
?     isNot?: AssetWhereInput
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `baseId`. Available options are marked with ?.
2025-06-21 23:26:29 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      baseId: {
      ~~~~~~
        in: undefined
      },
?     is?: AssetWhereInput,
?     isNot?: AssetWhereInput
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `baseId`. Available options are marked with ?.
2025-06-21 23:28:26 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      baseId: {
      ~~~~~~
        in: undefined
      },
?     is?: AssetWhereInput,
?     isNot?: AssetWhereInput
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `baseId`. Available options are marked with ?.
2025-06-21 23:28:27 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      baseId: {
      ~~~~~~
        in: undefined
      },
?     is?: AssetWhereInput,
?     isNot?: AssetWhereInput
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `baseId`. Available options are marked with ?.
2025-06-21 23:29:15 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      base_id: {
        in: undefined
      }
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-21 23:29:16 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      base_id: {
        in: undefined
      }
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-21 23:29:25 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    base_id: {
      in: undefined
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   equipment_type?: true,
?   assignments?: true,
?   transfers?: true,
?   purchases?: true,
?   expenditures?: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-21 23:29:26 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {
    base_id: {
      in: undefined
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   equipment_type?: true,
?   assignments?: true,
?   transfers?: true,
?   purchases?: true,
?   expenditures?: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-21 23:29:27 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      base_id: {
        in: undefined
      }
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-21 23:29:28 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      base_id: {
        in: undefined
      }
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-21 23:31:17 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      base_id: {
        in: undefined
      }
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-21 23:31:18 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      base_id: {
        in: undefined
      }
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-21 23:34:01 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      base_id: {
        in: undefined
      }
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-21 23:34:02 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {
    asset: {
      base_id: {
        in: undefined
      }
    }
  },
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 00:42:25 [31merror[39m: Login error: 
Invalid `prisma.user.findUnique()` invocation:


Can't reach database server at `ep-soft-sky-a5qzuv0v-pooler.us-east-2.aws.neon.tech:5432`

Please make sure your database server is running at `ep-soft-sky-a5qzuv0v-pooler.us-east-2.aws.neon.tech:5432`.
2025-06-22 00:42:47 [31merror[39m: Login error: 
Invalid `prisma.user.findUnique()` invocation:


Can't reach database server at `ep-soft-sky-a5qzuv0v-pooler.us-east-2.aws.neon.tech:5432`

Please make sure your database server is running at `ep-soft-sky-a5qzuv0v-pooler.us-east-2.aws.neon.tech:5432`.
2025-06-22 00:54:02 [31merror[39m: Login error: 
Invalid `prisma.user.findUnique()` invocation:


Can't reach database server at `ep-soft-sky-a5qzuv0v-pooler.us-east-2.aws.neon.tech:5432`

Please make sure your database server is running at `ep-soft-sky-a5qzuv0v-pooler.us-east-2.aws.neon.tech:5432`.
2025-06-22 01:05:53 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 01:05:54 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 01:05:56 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   equipment_type?: true,
?   assignments?: true,
?   transfers?: true,
?   purchases?: true,
?   expenditures?: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 01:05:57 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   equipment_type?: true,
?   assignments?: true,
?   transfers?: true,
?   purchases?: true,
?   expenditures?: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 01:05:58 [31merror[39m: Error fetching users: 
Invalid `prisma.user.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    createdAt: "desc",
    ~~~~~~~~~
?   id?: SortOrder,
?   username?: SortOrder,
?   password?: SortOrder,
?   role?: SortOrder,
?   base_id?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   base?: BaseOrderByWithRelationInput,
?   assignments?: AssignmentOrderByRelationAggregateInput
  },
  include: {
    bases: {
      include: {
        base: true
      }
    }
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
2025-06-22 01:06:00 [31merror[39m: Error fetching users: 
Invalid `prisma.user.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    createdAt: "desc",
    ~~~~~~~~~
?   id?: SortOrder,
?   username?: SortOrder,
?   password?: SortOrder,
?   role?: SortOrder,
?   base_id?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   base?: BaseOrderByWithRelationInput,
?   assignments?: AssignmentOrderByRelationAggregateInput
  },
  include: {
    bases: {
      include: {
        base: true
      }
    }
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
2025-06-22 01:06:01 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   equipment_type?: true,
?   assignments?: true,
?   transfers?: true,
?   purchases?: true,
?   expenditures?: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 01:06:02 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 01:06:03 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 01:06:17 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 01:06:18 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 01:08:20 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 01:08:21 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignment_date: "desc"
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true,
        ~~~~~~~~~~~~~
?       equipment_type?: true,
?       assignments?: true,
?       transfers?: true,
?       purchases?: true,
?       expenditures?: true
      }
    },
    assignedBy: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 01:08:22 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   equipment_type?: true,
?   assignments?: true,
?   transfers?: true,
?   purchases?: true,
?   expenditures?: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 01:08:24 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   equipment_type?: true,
?   assignments?: true,
?   transfers?: true,
?   purchases?: true,
?   expenditures?: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 01:08:24 [31merror[39m: Error fetching users: 
Invalid `prisma.user.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    createdAt: "desc",
    ~~~~~~~~~
?   id?: SortOrder,
?   username?: SortOrder,
?   password?: SortOrder,
?   role?: SortOrder,
?   base_id?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   base?: BaseOrderByWithRelationInput,
?   assignments?: AssignmentOrderByRelationAggregateInput
  },
  include: {
    bases: {
      include: {
        base: true
      }
    }
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
2025-06-22 01:08:26 [31merror[39m: Error fetching users: 
Invalid `prisma.user.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    createdAt: "desc",
    ~~~~~~~~~
?   id?: SortOrder,
?   username?: SortOrder,
?   password?: SortOrder,
?   role?: SortOrder,
?   base_id?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   base?: BaseOrderByWithRelationInput,
?   assignments?: AssignmentOrderByRelationAggregateInput
  },
  include: {
    bases: {
      include: {
        base: true
      }
    }
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
2025-06-22 01:09:17 [31merror[39m: Error fetching users: 
Invalid `prisma.user.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    createdAt: "desc",
    ~~~~~~~~~
?   id?: SortOrder,
?   username?: SortOrder,
?   password?: SortOrder,
?   role?: SortOrder,
?   base_id?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   base?: BaseOrderByWithRelationInput,
?   assignments?: AssignmentOrderByRelationAggregateInput
  },
  include: {
    bases: {
      include: {
        base: true
      }
    }
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
2025-06-22 01:09:18 [31merror[39m: Error fetching users: 
Invalid `prisma.user.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    createdAt: "desc",
    ~~~~~~~~~
?   id?: SortOrder,
?   username?: SortOrder,
?   password?: SortOrder,
?   role?: SortOrder,
?   base_id?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   base?: BaseOrderByWithRelationInput,
?   assignments?: AssignmentOrderByRelationAggregateInput
  },
  include: {
    bases: {
      include: {
        base: true
      }
    }
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
2025-06-22 01:09:22 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-22 01:09:23 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-22 14:03:45 [31merror[39m: Login error: Illegal arguments: string, undefined
2025-06-22 14:04:05 [31merror[39m: Login error: Illegal arguments: string, undefined
2025-06-22 14:04:28 [31merror[39m: Login error: Illegal arguments: string, undefined
2025-06-22 14:13:13 [31merror[39m: Login error: Illegal arguments: string, undefined
2025-06-22 14:18:04 [31merror[39m: Login error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    username: "admin"
  },
  include: {
    bases: true,
    ~~~~~
?   base?: true,
?   assignments?: true
  }
}

Unknown field `bases` for include statement on model `User`. Available options are marked with ?.
2025-06-22 14:19:47 [31merror[39m: Login error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    username: "admin"
  },
  include: {
    bases: {
    ~~~~~
      include: {
        base: true
      }
    },
?   base?: true,
?   assignments?: true
  }
}

Unknown field `bases` for include statement on model `User`. Available options are marked with ?.
2025-06-22 14:19:49 [31merror[39m: Login error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    username: "admin"
  },
  include: {
    bases: {
    ~~~~~
      include: {
        base: true
      }
    },
?   base?: true,
?   assignments?: true
  }
}

Unknown field `bases` for include statement on model `User`. Available options are marked with ?.
2025-06-22 14:22:12 [31merror[39m: Login error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    username: "admin"
  },
  include: {
    bases: {
    ~~~~~
      include: {
        base: true
      }
    },
?   base?: true,
?   assignments?: true
  }
}

Unknown field `bases` for include statement on model `User`. Available options are marked with ?.
2025-06-22 14:23:04 [31merror[39m: Login error: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    username: "admin"
  },
  include: {
    bases: {
    ~~~~~
      include: {
        base: true
      }
    },
?   base?: true,
?   assignments?: true
  }
}

Unknown field `bases` for include statement on model `User`. Available options are marked with ?.
2025-06-22 14:26:58 [31merror[39m: Login error: Illegal arguments: string, undefined
2025-06-22 14:29:42 [31merror[39m: Login error: Illegal arguments: string, undefined
2025-06-22 14:32:17 [31merror[39m: Login error: Illegal arguments: string, undefined
2025-06-22 14:34:44 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchaseDate: "desc",
    ~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   base_id?: SortOrder,
?   vendor?: SortOrder,
?   cost?: SortOrder,
?   purchase_date?: SortOrder,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   base?: BaseOrderByWithRelationInput
  },
  include: {
    equipmentType: true,
    base: true
  }
}

Unknown argument `purchaseDate`. Did you mean `purchase_date`? Available options are marked with ?.
2025-06-22 14:34:46 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchaseDate: "desc",
    ~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   base_id?: SortOrder,
?   vendor?: SortOrder,
?   cost?: SortOrder,
?   purchase_date?: SortOrder,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   base?: BaseOrderByWithRelationInput
  },
  include: {
    equipmentType: true,
    base: true
  }
}

Unknown argument `purchaseDate`. Did you mean `purchase_date`? Available options are marked with ?.
2025-06-22 14:34:48 [31merror[39m: Error fetching transfers: 
Invalid `prisma.transfer.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    transferDate: "desc",
    ~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   from_base_id?: SortOrder,
?   to_base_id?: SortOrder,
?   transfer_date?: SortOrder,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   from_base?: BaseOrderByWithRelationInput,
?   to_base?: BaseOrderByWithRelationInput
  },
  include: {
    equipmentType: true,
    fromBase: true,
    toBase: true
  }
}

Unknown argument `transferDate`. Did you mean `transfer_date`? Available options are marked with ?.
2025-06-22 14:34:49 [31merror[39m: Error fetching transfers: 
Invalid `prisma.transfer.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    transferDate: "desc",
    ~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   from_base_id?: SortOrder,
?   to_base_id?: SortOrder,
?   transfer_date?: SortOrder,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   from_base?: BaseOrderByWithRelationInput,
?   to_base?: BaseOrderByWithRelationInput
  },
  include: {
    equipmentType: true,
    fromBase: true,
    toBase: true
  }
}

Unknown argument `transferDate`. Did you mean `transfer_date`? Available options are marked with ?.
2025-06-22 14:34:51 [31merror[39m: Error fetching assignments: Cannot read properties of undefined (reading 'map')
2025-06-22 14:34:53 [31merror[39m: Error fetching assignments: Cannot read properties of undefined (reading 'map')
2025-06-22 14:34:55 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   equipment_type?: true,
?   assignments?: true,
?   transfers?: true,
?   purchases?: true,
?   expenditures?: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 14:34:56 [31merror[39m: Error fetching assets: 
Invalid `prisma.asset.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    name: "asc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   equipment_type?: true,
?   assignments?: true,
?   transfers?: true,
?   purchases?: true,
?   expenditures?: true
  }
}

Unknown field `equipmentType` for include statement on model `Asset`. Available options are marked with ?.
2025-06-22 14:38:57 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 14:38:59 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 14:39:01 [31merror[39m: Error fetching transfers: 
Invalid `prisma.transfer.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    transfer_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    fromBase: true,
    toBase: true,
?   asset?: true,
?   from_base?: true,
?   to_base?: true
  }
}

Unknown field `equipmentType` for include statement on model `Transfer`. Available options are marked with ?.
2025-06-22 14:39:03 [31merror[39m: Error fetching transfers: 
Invalid `prisma.transfer.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    transfer_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    fromBase: true,
    toBase: true,
?   asset?: true,
?   from_base?: true,
?   to_base?: true
  }
}

Unknown field `equipmentType` for include statement on model `Transfer`. Available options are marked with ?.
2025-06-22 14:39:05 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-22 14:39:07 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-22 14:39:17 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-22 14:39:19 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-22 14:39:33 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-22 14:39:34 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-22 21:02:18 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-22 21:02:19 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-22 21:02:27 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-22 21:02:39 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 21:02:41 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 21:02:43 [31merror[39m: Error fetching transfers: 
Invalid `prisma.transfer.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    transfer_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    fromBase: true,
    toBase: true,
?   asset?: true,
?   from_base?: true,
?   to_base?: true
  }
}

Unknown field `equipmentType` for include statement on model `Transfer`. Available options are marked with ?.
2025-06-22 21:02:45 [31merror[39m: Error fetching transfers: 
Invalid `prisma.transfer.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    transfer_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    fromBase: true,
    toBase: true,
?   asset?: true,
?   from_base?: true,
?   to_base?: true
  }
}

Unknown field `equipmentType` for include statement on model `Transfer`. Available options are marked with ?.
2025-06-22 21:02:46 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-22 21:02:47 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-22 21:03:30 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-22 21:03:32 [31merror[39m: Error fetching assignments: 
Invalid `prisma.assignment.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    assignmentDate: "desc",
    ~~~~~~~~~~~~~~
?   id?: SortOrder,
?   asset_id?: SortOrder,
?   user_id?: SortOrder,
?   assignment_date?: SortOrder,
?   return_date?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   updated_at?: SortOrder,
?   asset?: AssetOrderByWithRelationInput,
?   user?: UserOrderByWithRelationInput
  },
  include: {
    asset: {
      include: {
        base: true,
        equipmentType: true
      }
    },
    assignedBy: true
  }
}

Unknown argument `assignmentDate`. Did you mean `assignment_date`? Available options are marked with ?.
2025-06-22 21:03:36 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 21:03:37 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 21:04:06 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 21:04:08 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 21:06:35 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipment_type: true,
    ~~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipment_type` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 21:06:37 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipment_type: true,
    ~~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipment_type` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 21:15:24 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipment_type: true,
    ~~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipment_type` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 22:31:31 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipment_type: true,
    ~~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipment_type` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 22:31:33 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipment_type: true,
    ~~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipment_type` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 22:34:59 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipment_type: true,
    ~~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipment_type` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 22:35:01 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipment_type: true,
    ~~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipment_type` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 22:35:03 [31merror[39m: Error fetching transfers: 
Invalid `prisma.transfer.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    transfer_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    fromBase: true,
    toBase: true,
?   asset?: true,
?   from_base?: true,
?   to_base?: true
  }
}

Unknown field `equipmentType` for include statement on model `Transfer`. Available options are marked with ?.
2025-06-22 22:35:04 [31merror[39m: Error fetching transfers: 
Invalid `prisma.transfer.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    transfer_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    fromBase: true,
    toBase: true,
?   asset?: true,
?   from_base?: true,
?   to_base?: true
  }
}

Unknown field `equipmentType` for include statement on model `Transfer`. Available options are marked with ?.
2025-06-22 22:37:28 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 22:37:29 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 22:40:19 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 22:40:21 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 22:45:46 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 22:45:48 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 22:48:11 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 22:48:12 [31merror[39m: Error fetching purchases: 
Invalid `prisma.purchase.findMany()` invocation:

{
  where: {},
  skip: 0,
  take: 10,
  orderBy: {
    purchase_date: "desc"
  },
  include: {
    equipmentType: true,
    ~~~~~~~~~~~~~
    base: true,
?   asset?: true
  }
}

Unknown field `equipmentType` for include statement on model `Purchase`. Available options are marked with ?.
2025-06-22 22:58:57 [31merror[39m: Login error: 
Invalid `prisma.user.findUnique()` invocation:


Inconsistent column data: Could not convert value "cmc60v4qe000evvfcojm8whzq" of the field `id` to type `Int`.
2025-06-22 22:58:59 [31merror[39m: Login error: 
Invalid `prisma.user.findUnique()` invocation:


Inconsistent column data: Could not convert value "cmc60v4qe000evvfcojm8whzq" of the field `id` to type `Int`.
2025-06-22 22:59:40 [31merror[39m: Login error: 
Invalid `prisma.user.findUnique()` invocation:


Inconsistent column data: Could not convert value "cmc60v4qe000evvfcojm8whzq" of the field `id` to type `Int`.
2025-06-22 23:01:23 [31merror[39m: 
Invalid `prisma.base.createMany()` invocation:


Null constraint violation on the fields: (`id`)
2025-06-22 23:02:02 [31merror[39m: 
Invalid `prisma.base.createMany()` invocation:


Null constraint violation on the fields: (`id`)
2025-06-22 23:08:02 [31merror[39m: 
Invalid `prisma.base.createMany()` invocation:


Null constraint violation on the fields: (`id`)
2025-06-22 23:10:41 [31merror[39m: 
Invalid `prisma.base.createMany()` invocation:


Null constraint violation on the fields: (`id`)
2025-06-23 01:32:32 [31merror[39m: Error fetching transfers: prisma is not defined
2025-06-23 01:32:33 [31merror[39m: Error fetching transfers: prisma is not defined
2025-06-23 01:32:48 [31merror[39m: Error fetching transfers: prisma is not defined
2025-06-23 01:32:49 [31merror[39m: Error fetching transfers: prisma is not defined
2025-06-23 01:35:14 [31merror[39m: Error fetching transfers: prisma is not defined
2025-06-23 01:35:15 [31merror[39m: Error fetching transfers: prisma is not defined
2025-06-23 01:35:34 [31merror[39m: Error fetching transfers: prisma is not defined
2025-06-23 01:35:35 [31merror[39m: Error fetching transfers: prisma is not defined
2025-06-23 01:35:37 [31merror[39m: Error fetching transfers: prisma is not defined
2025-06-23 01:35:38 [31merror[39m: Error fetching transfers: prisma is not defined
2025-06-23 09:21:50 [31merror[39m: Error fetching dashboard metrics: getaddrinfo ENOTFOUND cuda-shard-00-00.i5hng.mongodb.net
2025-06-23 09:21:50 [31merror[39m: Error fetching dashboard filters: getaddrinfo ENOTFOUND cuda-shard-00-00.i5hng.mongodb.net
2025-06-23 13:01:57 [31merror[39m: Error creating purchase: Cannot increment with non-numeric argument: {quantity: "34"}
2025-06-23 13:01:59 [31merror[39m: Error creating purchase: Cannot increment with non-numeric argument: {quantity: "34"}
2025-06-23 13:01:59 [31merror[39m: Error creating purchase: Cannot increment with non-numeric argument: {quantity: "34"}
2025-06-23 13:02:01 [31merror[39m: Error creating purchase: Cannot increment with non-numeric argument: {quantity: "34"}
2025-06-23 13:02:09 [31merror[39m: Error creating purchase: Cannot increment with non-numeric argument: {quantity: "34"}
2025-06-23 13:11:41 [31merror[39m: Error creating purchase: db is not defined
2025-06-23 15:38:17 [31merror[39m: Admin user creation error: bcrypt.hash is not a function
2025-06-23 15:38:24 [31merror[39m: Admin user creation error: bcrypt.hash is not a function
